{
  "AWSTemplateFormatVersion": "2010-09-09",



  "Resources": {

    "DevVPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.12.0.0/23",
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "Dev-VPC-${AWS::StackName}"
            }
          }
        ]
      }
    },


    "DevSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "DevVPC",
      "Properties": {
        "VpcId": {"Ref": "DevVPC"},
        "AvailabilityZone": {"Fn::Select":["0",{"Fn::GetAZs": {"Ref":"AWS::Region"}}]},
        "CidrBlock": "10.12.0.0/24",
        "MapPublicIpOnLaunch": "True"
      }
    },


    "DevSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "DevVPC",
      "Properties": {
        "VpcId": {"Ref": "DevVPC"},
        "AvailabilityZone": {"Fn::Select":["0",{"Fn::GetAZs": {"Ref":"AWS::Region"}}]},
        "CidrBlock": "10.12.1.0/24",
        "MapPublicIpOnLaunch": "True"
      }
    },

    "RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {"Ref": "DevVPC"}
      }
    },

    "RTableAss1": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {"Ref": "RouteTable"},
        "SubnetId": {"Ref": "DevSubnet1"}
      }
    },

    "RTableAss2": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {"Ref": "RouteTable"},
        "SubnetId": {"Ref": "DevSubnet2"}
      }
    },

    "NetAcl1": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {"Ref": "DevVPC"}
      }
    },

    "NetAclEntryEgress": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {"Ref": "NetAcl1"},
        "CidrBlock": "0.0.0.0/0",
        "Egress": "True",
        "Protocol": "-1",
        "RuleAction": "Allow",
        "RuleNumber": "100"
      }
    },


    "NetAclEntryIngress": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {"Ref": "NetAcl1"},
        "CidrBlock": "0.0.0.0/0",
        "Egress": "False",
        "Protocol": "-1",
        "RuleAction": "Allow",
        "RuleNumber": "100"
      }
    },

    "AclAssoc1": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "SubnetId": {"Ref": "DevSubnet1"},
        "NetworkAclId": {"Ref": "NetAcl1"}
      }
    },

    "AclAssoc2": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "SubnetId": {"Ref": "DevSubnet2"},
        "NetworkAclId": {"Ref": "NetAcl1"}
      }
    },

    "NatGateway1": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId" : {"Fn::GetAtt" : ["EIP1", "AllocationId"]},
        "SubnetId" : { "Ref" : "DevSubnet1"}

      }
    },

    "NatGateway2": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId" : {"Fn::GetAtt" : ["EIP2", "AllocationId"]},
        "SubnetId" : { "Ref" : "DevSubnet2"}

      }
    },

    "Route1" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "RouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "NatGatewayId" : { "Ref" : "NatGateway1" }
      }
    },

    "Route2" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "RouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "NatGatewayId" : { "Ref" : "NatGateway2" }
      }
    },

    "EIP1" : {
      "Type" : "AWS::EC2::EIP",
      "Properties" : {
        "Domain" : "vpc"
      }
    },

    "EIP2" : {
      "Type" : "AWS::EC2::EIP",
      "Properties" : {
        "Domain" : "vpc"
      }
    },

    "SecGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupName": {"Fn::Sub": "Dev-VPC-SG-${AWS::StackName}"},
        "GroupDescription": "Test VPC Sec group",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": "22",
            "ToPort": "22",
            "IpProtocol": "tcp"
          },
          {
            "SourceSecurityGroupId": {"Ref": "ELBSecGroup"},
            "FromPort": "80",
            "ToPort": "80",
            "IpProtocol": "tcp"
          }
        ],
        "VpcId": {"Ref": "DevVPC"},
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Sub":"Dev-VPC-SG-${AWS::StackName}"}
          }
        ]
      }
    },

    "ELBSecGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupName": {"Fn::Sub": "Dev-ELB-SG-${AWS::StackName}"},
        "GroupDescription": "Sec group for ELB",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": "80",
            "ToPort": "80",
            "IpProtocol": "tcp"
          }
        ],
        "VpcId": {"Ref": "DevVPC"},
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Sub": "Dev-ELB-SG-${AWS::StackName}"}
          }
        ]
      }
    },

    "DevASG": {
      "Type":"AWS::CloudFormation::Stack",
      "Properties": {
        "Tags": [{"Key":"StackType", "Value":"AutoScalingGroup"}],
        "TemplateURL": {"Fn::Sub":"${Github}/asg-aws.json"},
        "TimeoutInMinutes" : "15"
       }
    }




  },

  "Outputs": {
    "VpcId": {
      "Value": {"Ref": "DevVPC"}
    },

    "SubnetId1": {
      "Value": {"Ref": "DevSubnet1"}
    },

    "SubnetId2": {
      "Value": {"Ref": "DevSubnet2"}
    },

    "SecurityGroupId": {
      "Value": {"Ref": "SecGroup"}
    },

    "ELBSecurityGroupId": {
      "Value": {"Ref": "ELBSecGroup"}
    },

    "SubnetAZ": {
      "Value": {"Fn::GetAtt":["DevSubnet1", "AvailabilityZone"]}
    },

    "SubnetAZ2": {
      "Value": {"Fn::GetAtt":["DevSubnet2", "AvailabilityZone"]}
    }
  }

}